<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on IsoMode Documentation</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Introduction on IsoMode Documentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installation</title>
      <link>http://localhost:1313/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/installation/</guid>
      <description>&lt;h1 id=&#34;installation&#34;&gt;&#xA;  Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;IsoMode has several dependencies that need to be installed:&lt;/p&gt;&#xA;&lt;h2 id=&#34;dependencies&#34;&gt;&#xA;  Dependencies&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dependencies&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ASE (atomic simulation environment)&lt;/li&gt;&#xA;&lt;li&gt;numpy&lt;/li&gt;&#xA;&lt;li&gt;spglib (for space group)&lt;/li&gt;&#xA;&lt;li&gt;abipy (for reading netcdf files)&lt;/li&gt;&#xA;&lt;li&gt;request (for interacting with the findsym and isodistort server)&lt;/li&gt;&#xA;&lt;li&gt;bs4 (for parsing the html pages)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Optional dependencies:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;anaddb compiled with netcdf (not needed by the package but required for generating *PHBST.nc files)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;installation-methods&#34;&gt;&#xA;  Installation Methods&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#installation-methods&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;install-from-pypi-recommended&#34;&gt;&#xA;  Install from PyPI (Recommended)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#install-from-pypi-recommended&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;The easiest way to install IsoMode is through pip:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Labeling Phonon Modes</title>
      <link>http://localhost:1313/docs/phonon-modes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phonon-modes/</guid>
      <description>&lt;h1 id=&#34;labeling-phonon-modes&#34;&gt;&#xA;  Labeling Phonon Modes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#labeling-phonon-modes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;code&gt;label_phbst&lt;/code&gt; function and CLI allow you to label phonon modes from ABINIT PHBST calculations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;python-function-usage&#34;&gt;&#xA;  Python Function Usage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#python-function-usage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-usage&#34;&gt;&#xA;  Basic Usage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basic-usage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;For basic usage with default parameters:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; isomode.anamode &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; label_phbst&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_phbst(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;run.abo_PHBST.nc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;results.txt&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;advanced-usage&#34;&gt;&#xA;  Advanced Usage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#advanced-usage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;For custom supercell and q-points:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; isomode.anamode &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; label_phbst&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Define a 3x3x3 supercell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eye(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Specify q-points of interest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qpts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Gamma&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Run the analysis&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label_phbst(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;phonons.nc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;modes.txt&amp;#39;&lt;/span&gt;, sc_mat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sc, qdict&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;qpts)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;command-line-interface&#34;&gt;&#xA;  Command Line Interface&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#command-line-interface&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The module provides a convenient CLI for easy usage:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symmetry Analysis</title>
      <link>http://localhost:1313/docs/symmetry-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/symmetry-analysis/</guid>
      <description>&lt;h1 id=&#34;symmetry-analysis&#34;&gt;&#xA;  Symmetry Analysis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#symmetry-analysis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;IsoMode provides tools to identify symmetry-adapted modes by comparing a high-symmetry structure with a low-symmetry structure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;using-view_distortpy&#34;&gt;&#xA;  Using view_distort.py&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#using-view_distortpy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;view_distort.py&lt;/code&gt; command is the main tool for symmetry analysis. It takes a parent structure (high symmetry) and a distorted structure (low symmetry) as inputs and analyzes the symmetry-adapted modes that relate them.&lt;/p&gt;&#xA;&lt;h3 id=&#34;command-usage&#34;&gt;&#xA;  Command Usage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#command-usage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;view_distort.py -p PARENT -d DISTORT -o OUTPUT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;command-options&#34;&gt;&#xA;  Command Options&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#command-options&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--parent&lt;/code&gt;: Parent (high symmetry) CIF file name&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--distort&lt;/code&gt;: Distorted (low symmetry) CIF file name&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--output&lt;/code&gt;: Output filename for mode details&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;example-usage&#34;&gt;&#xA;  Example Usage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#example-usage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example analyzing a P21/c YNiO3 structure against its cubic parent:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating Distorted Structures</title>
      <link>http://localhost:1313/docs/generating-structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/generating-structures/</guid>
      <description>&lt;h1 id=&#34;generating-distorted-structures&#34;&gt;&#xA;  Generating Distorted Structures&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#generating-distorted-structures&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;IsoMode can generate distorted structures based on phonon calculations. This feature requires proper setup of phonon band structure calculations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;You need a phonon band structure netcdf file that includes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Zone-center points&lt;/li&gt;&#xA;&lt;li&gt;High-symmetry points&lt;/li&gt;&#xA;&lt;li&gt;Symmetry equivalent qpoints&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Important notes for phonon calculations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Symmetry equivalent qpoints must be included&lt;/li&gt;&#xA;&lt;li&gt;Do not add points between high-symmetry points (set ndivsm to 2)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;example-anaddb-input&#34;&gt;&#xA;  Example ANADDB Input&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#example-anaddb-input&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example input for a Dion-Jacobson structure:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
